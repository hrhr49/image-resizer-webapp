{"version":3,"sources":["script.ts"],"names":[],"mappings":"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","file":"script.2f07699a.js","sourceRoot":"..","sourcesContent":["import './style.css';\n\nconst sizes = [72, 96, 120, 128, 144, 152, 180, 192, 384, 512];\nconst fileInput: HTMLInputElement = document.forms['file-form'].elements['file-input'];\n\nconst addImageAndDownloadButton = async (file: File, width: number, height: number) => {\n  // 画像をリサイズする\n  const image = new Image();\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  const imgSrc: string = await new Promise<string>((resolve) => {\n    reader.onload = (e: ProgressEvent<FileReader>) => {\n      resolve(e.target.result.toString());\n    }\n  });\n\n  image.src = imgSrc;\n\n  const canvas = await new Promise<HTMLCanvasElement>((resolve) => {\n    image.onload = () => {\n      const canvas: HTMLCanvasElement = document.createElement('canvas');\n      canvas.setAttribute('width', width.toString());\n      canvas.setAttribute('height', height.toString());\n\n      var ctx = canvas.getContext('2d');\n\n      // canvasに既に描画されている画像をクリア\n      ctx.clearRect(0, 0, width, height);\n      // canvasに画像を描画\n      ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, width, height);\n      resolve(canvas);\n    }\n  });\n\n  const downloadButton = document.createElement('button');\n  downloadButton.textContent = `download icon-${width}x${height}.png`;\n\n  downloadButton.addEventListener('click', () => {\n    const a = document.createElement(\"a\");\n    a.href = canvas.toDataURL(\"image/png\");\n    a.setAttribute(\"download\", `icon-${width}x${height}.png`);\n    a.dispatchEvent(new MouseEvent(\"click\"));\n  });\n\n  return {\n    canvas,\n    downloadButton,\n  };\n};\n\nconst onFileUpload = async (file: File) => {\n  if (!['image/jpeg', 'image/jpg', 'image/png'].includes(file.type)) {\n    alert('cannot read file. jpeg or png is supported.')\n    return;\n  }\n\n  const div = document.getElementById('image-area');\n\n  // remove previous result\n  div.textContent = '';\n\n  for (const size of sizes) {\n    const {canvas, downloadButton} = await addImageAndDownloadButton(file, size, size);\n    const div2 = document.createElement('div');\n    const div3 = document.createElement('div');\n    const div4 = document.createElement('div');\n    div2.appendChild(canvas);\n    div3.appendChild(downloadButton);\n    div4.appendChild(div2);\n    div4.appendChild(div3);\n    div4.style.border = 'solid 1px blue';\n    div.appendChild(div4);\n  }\n}\n\nfileInput.addEventListener('change', async () => {\n  const file: File = fileInput.files[0];\n  await onFileUpload(file);\n});\n\nconst uploadArea = document.getElementById('upload-area') as HTMLDivElement;\n\nuploadArea.addEventListener('dragover', (e) => {\n  e.preventDefault();\n  uploadArea.classList.add('drag');\n});\n\nuploadArea.addEventListener('dragleave', () => {\n  uploadArea.classList.remove('drag');\n});\n\nuploadArea.addEventListener('drop', (e) => {\n  e.preventDefault();\n  uploadArea.classList.remove('drag');\n  const files = e.dataTransfer.files;\n  fileInput.files = files;\n  onFileUpload(files[0]);\n});\n"]}